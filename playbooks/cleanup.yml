- hosts:
    - k8s_masters
    - k8s_deleted

  tasks:

    - include_tasks:
        file: helpers/inventory.yml
        apply: { tags: [ always ] }
      tags:
        - always


    # - name: Select primary master
    #   set_fact:
    #     primary_master: "{{ inventory_hostname }}"
    #   delegate_to: localhost
    #   run_once: yes
    #   when:
    #     - hostvars[item].k8s_node_type == "master"
    #   with_items: "{{ ansible_play_hosts }}"


    - name: Drain node
      shell: >
        kubectl drain {{ hostvars[item].ansible_hostname }} --ignore-daemonsets --delete-local-data
      delegate_to: "{{ k8s_primary_master_name }}"
      run_once: yes
      register: _drain_node
      failed_when:
        - _drain_node.rc != 0 and "(NotFound)" not in _drain_node.stderr 
      when:
        - hostvars[item].k8s_node_type == "delete"
      with_items: "{{ ansible_play_hosts }}"


    - name: Delete node
      shell: >
        kubectl delete node {{ hostvars[item].ansible_hostname }}
      delegate_to: "{{ primary_master }}"
      run_once: yes
      register: _delete_node
      failed_when:
        - _delete_node.rc != 0 and "(NotFound)" not in _delete_node.stderr 
      when:
        - hostvars[item].k8s_node_type == "delete"
      with_items: "{{ ansible_play_hosts }}"    


    - name: Reset node
      include_role:
        name: k8s_base
        apply:
          tags: [teardown, remove]
      when:
        - k8s_node_type == "delete"
